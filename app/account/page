'use client';

import { useEffect, useState } from 'react';
import { createClient } from '@/lib/supabaseClient';

export default function AccountPage() {
  const supabase = createClient();
  const [username, setUsername] = useState('');
  const [phone, setPhone] = useState('');
  const [fullName, setFullName] = useState('');
  const [msg, setMsg] = useState<string | null>(null);
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    (async () => {
      const { data: { user } } = await supabase.auth.getUser();
      if (!user) return;

      const { data } = await supabase
        .from('profiles')
        .select('username, phone, full_name')
        .eq('id', user.id)
        .maybeSingle();

      if (data) {
        setUsername(data.username ?? '');
        setPhone(data.phone ?? '');
        setFullName(data.full_name ?? '');
      }
    })();
  }, []);

  async function onSave(e: React.FormEvent) {
    e.preventDefault();
    setMsg(null);
    try {
      setLoading(true);
      const { data: { user } } = await supabase.auth.getUser();
      if (!user) {
        setMsg('No hay sesión.');
        return;
      }

      const { error } = await supabase
        .from('profiles')
        .update({
          username: username.trim(),
          phone: phone.trim(),
          full_name: fullName.trim(),
        })
        .eq('id', user.id);

      if (error) throw error;
      setMsg('Datos guardados.');
    } catch (err: any) {
      if (err.code === '23505') setMsg('Ese usuario o teléfono ya existe.');
      else setMsg(err?.message ?? 'Error al guardar.');
    } finally {
      setLoading(false);
    }
  }

  return (
    <div className="max-w-md mx-auto p-6 space-y-4">
      <h1 className="text-2xl font-bold">Mi cuenta</h1>
      {msg && <div className="rounded-md border p-3 text-sm">{msg}</div>}

      <form onSubmit={onSave} className="space-y-3">
        <div>
          <label className="block text-sm mb-1">Usuario</label>
          <input className="w-full rounded border px-3 py-2"
                 value={username}
                 onChange={(e) => setUsername(e.target.value)} />
        </div>

        <div>
          <label className="block text-sm mb-1">Teléfono</label>
          <input className="w-full rounded border px-3 py-2"
                 value={phone}
                 onChange={(e) => setPhone(e.target.value)} />
        </div>

        <div>
          <label className="block text-sm mb-1">Nombre completo</label>
          <input className="w-full rounded border px-3 py-2"
                 value={fullName}
                 onChange={(e) => setFullName(e.target.value)} />
        </div>

        <button disabled={loading}
                className="w-full rounded bg-black text-white py-2 disabled:opacity-50"
                type="submit">
          {loading ? 'Guardando...' : 'Guardar'}
        </button>
      </form>
    </div>
  );
}
